---
import TechnologyCard from "@components/TechnologyCard.astro"

import type { Technology } from "@interfaces/interfaces.ts"

const technologies: Technology[] = [
    {
        name: "HTML",
        icon: "tech-html",
    },
    {
        name: "CSS",
        icon: "tech-css",
    },
    {
        name: "Javascript",
        icon: "tech-javascript",
    },
    {
        name: "Typescript",
        icon: "tech-typescript",
    },
    {
        name: "Vue.js",
        icon: "tech-vue",
    },
    {
        name: "Astro.js",
        icon: "tech-astro",
    },
    {
        name: "Tailwindcss",
        icon: "tech-tailwind",
    },
    {
        name: "Bootstrap",
        icon: "tech-bootstrap",
    },
    {
        name: "PHP",
        icon: "tech-php",
    },
    {
        name: "Laravel",
        icon: "tech-laravel",
    },
    {
        name: "Python",
        icon: "tech-python",
    },
    {
        name: "Rust",
        icon: "tech-rust",
    },
    {
        name: "MySQL",
        icon: "tech-mysql",
    },
    {
        name: "PostgreSQL",
        icon: "tech-postgresql",
    },
    {
        name: "Git",
        icon: "tech-git",
    },
]
---

<section
    class="flex flex-col justify-center items-center border-b border-gray-600 py-5"
    id="technologies"
>
    <h1 class="text-3xl text-white">Tecnolog√≠as</h1>
    <div class="flex justify-center items-center h-52 w-full overflow-hidden">
        <div class="h-full overflow-hidden" id="carousel-wrapper">
            <div class="flex items-center h-full will-change-transform gap-20" id="carousel-track">
                {
                    [...technologies, ...technologies].map((technology, index) => (
                        <TechnologyCard technology={technology} index={index} />
                    ))
                }
            </div>
        </div>
    </div>
</section>

<script>
function carousel(): void {
    const carouselTrack = document.getElementById('carousel-track')
    let translateX = 0
    const speed = 1
    
    if (!carouselTrack) return
    
    let resetPoint = carouselTrack.scrollWidth / 2

    function animate(): void {
        translateX -= speed

        if (Math.abs(translateX) >= resetPoint) {
            translateX = 0;
        }

        if (carouselTrack) carouselTrack.style.transform = `translateX(${translateX}px)`;

        requestAnimationFrame(() => animate());
    }

    animate()
}

carousel()
</script>